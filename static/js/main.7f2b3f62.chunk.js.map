{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["q","a","encodeURIComponent","fetch","response","json","body","console","log","items","filter","item","type","App","React","useState","query","setQuery","list","setList","className","onSubmit","e","preventDefault","searchYouTube","then","autoFocus","value","onChange","target","length","map","href","link","title","description","author","ref","name","views","duration","uploaded_at","alt","src","thumbnail","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRA4CA,WAA6BA,GAA7B,iBAAAC,EAAA,6DACED,EAAIE,mBAAmBF,GADzB,SAEyBG,MAAM,mEAAqEH,EAAG,CACnG,OAAU,MACV,QAAW,CACT,kBAAmB,wCACnB,iBAAkB,wDANxB,cAEQI,EAFR,gBASqBA,EAASC,OAT9B,cASQC,EATR,OAUEC,QAAQC,IAAIF,GAVd,kBAWSA,EAAKG,MAAMC,QAAO,SAAAC,GAAI,MAAkB,UAAdA,EAAKC,SAXxC,4C,sBAceC,MAzDf,WAAgB,IAAD,EACaC,IAAMC,SAAS,oBAD5B,mBACNC,EADM,KACCC,EADD,OAEWH,IAAMC,SAAS,MAF1B,mBAENG,EAFM,KAEAC,EAFA,KASb,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAMC,SAPK,SAACC,GACdA,EAAEC,iB,2CACFC,CAAcR,GAAOS,KAAKN,IAKxB,UACE,uBAAOO,WAAS,EAACC,MAAOX,EAAOY,SAAU,SAAAN,GAAC,OAAIL,EAASK,EAAEO,OAAOF,UAChE,uDAEDT,IACkB,IAAhBA,EAAKY,OACF,2CAEA,oBAAIV,UAAU,QAAd,SACGF,EAAKa,KAAI,SAAApB,GAAI,OACZ,qBAAIS,UAAU,OAAd,UACE,gCACE,4BAAG,mBAAGY,KAAMrB,EAAKsB,KAAd,SAAqBtB,EAAKuB,UAC7B,4BAAIvB,EAAKwB,iBAEX,qBAAIf,UAAU,OAAd,UACE,sCAAQ,mBAAGY,KAAMrB,EAAKyB,OAAOC,IAArB,SAA2B1B,EAAKyB,OAAOE,UAC/C,yCAAY3B,EAAK4B,SACjB,4CAAe5B,EAAK6B,YACpB,4CAAe7B,EAAK8B,kBAEtB,qBAAKC,IAAI,GAAGC,IAAKhC,EAAKiC,cAXEjC,EAAKkC,cCVhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7f2b3f62.chunk.js","sourcesContent":["import React from 'react'\nfunction App() {\n  const [query, setQuery] = React.useState('European history');\n  const [list, setList] = React.useState(null);\n\n  const search = (e) => {\n    e.preventDefault();\n    searchYouTube(query).then(setList);\n  };\n\n  return (\n    <div className=\"app\">\n      <form onSubmit={search}>\n        <input autoFocus value={query} onChange={e => setQuery(e.target.value)} />\n        <button>Search YouTube</button>\n      </form>\n      {list &&\n        (list.length === 0\n          ? <p>No results</p>\n          : (\n            <ul className=\"items\">\n              {list.map(item => (\n                <li className=\"item\" key={item.id}>\n                  <div>\n                    <b><a href={item.link}>{item.title}</a></b>\n                    <p>{item.description}</p>\n                  </div>\n                  <ul className=\"meta\">\n                    <li>By: <a href={item.author.ref}>{item.author.name}</a></li>\n                    <li>Views: {item.views}</li>\n                    <li>Duration: {item.duration}</li>\n                    <li>Uploaded: {item.uploaded_at}</li>\n                  </ul>\n                  <img alt=\"\" src={item.thumbnail} />\n                </li>\n              ))}\n            </ul>\n          )\n        )\n      }\n    </div>\n  );\n}\n\nasync function searchYouTube(q) {\n  q = encodeURIComponent(q);\n  const response = await fetch(\"https://youtube-search-results.p.rapidapi.com/youtube-search/?q=\" + q, {\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-rapidapi-host\": \"youtube-search-results.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"af2d7a3c9dmsh409c3d81d409dadp1309b0jsn5675e9e875ca\"\n    }\n  });\n  const body = await response.json();\n  console.log(body);\n  return body.items.filter(item => item.type === 'video');\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}